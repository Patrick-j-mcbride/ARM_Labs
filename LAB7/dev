/* 
        mov     x21, x0
        mov     x22, x1
        mov     x5, xzr

        mov     x2, xzr // x2 is itr
        b       strt
tLoop:
        add     x2, x2, #1
        lsl     x1, x1, #1
strt:   
        cmp     x1, x0
        blt     tLoop
bLoop: 
        cmp     x2, xzr
        blt     dne

        cmp     x1, x3
        ble     div

        lsr     x5, x5, #1
        b       bm
div:          
        lsl     x5, x5, #1
        add     x5, x5, #1
        sub     x0, x0, x1

bm:
        sub     x2, x2, #1
        lsr     x1, x1, #1
        b       bLoop
*/


/*
    .global divide// x0/x1 
divide:
        stp     x29, x30, [sp, #-16]!
        stp     x21, x22, [sp, #-16]!


        mov     x2, xzr// itr
        mov     x4, xzr // sum
lp:
        add     x2, x2, #1
        add     x4, x4, x1
        cmp     x4, x0
        bgt     ds
        beq     dne
        b       lp
ds:
        sub     x1, x4, x0
        sub     x0, x2, #1
        b       fl
dne:
        sub     x1, x4, x0
        mov     x0, x2 
fl:
        ldp     x21, x22, [sp], #16
        ldp     x29, x30, [sp], #16
        ret
*/